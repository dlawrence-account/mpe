import os
import numpy as np
from pathlib import Path
from mpe_estimator import MAPMEstimator

def load_test_returns():
    """
    Presents a numbered menu of CSVs in tests/in and returns a 1D numpy array.
    """
    project_root = Path(__file__).parents[1]
    test_dir = project_root / "tests" / "in"

    # Gather CSV files
    try:
        files = sorted(f for f in test_dir.iterdir() if f.suffix.lower() == ".csv")
    except FileNotFoundError:
        print(f"Error: test directory not found: {test_dir}")
        return None

    if not files:
        print(f"No CSVs found in {test_dir}")
        return None

    # Display menu
    print("Select a test CSV file:")
    for i, f in enumerate(files, start=1):
        print(f"  {i}. {f.name}")
    print("  0. Cancel")

    choice = input("Enter number: ").strip()
    if choice != "0" and choice.isdigit() and 1 <= int(choice) <= len(files):
        path = files[int(choice) - 1]
    else:
        print("Loading cancelled.")
        return None

    # Load and validate
    try:
        data = np.loadtxt(path, delimiter=",", skiprows=1)
    except Exception as e:
        print(f"Error loading {path.name}: {e}")
        return None
    if data.ndim != 1:
        print("Error: expected single-column returns")
        return None

    print(f"ðŸ“„ Loaded {path.name}")
    return data

if __name__ == "__main__":
    returns = load_test_returns()
    if returns is None:
        print("No valid returns data loaded; exiting.")
        exit(1)
    estimator = MAPMEstimator(returns)
    params = estimator.estimate_parameters()
    print("Estimated parameters:", params)
